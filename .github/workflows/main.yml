name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  
  build_linux:
    name: Build on Linux Systems
    
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            arch: 86
            cuda: "11.3"
            optix: "7.3.0"
            ospray: "2.5.0"

          - os: ubuntu-20.04
            arch: 75
            cuda: "11.3"
            optix: "7.3.0"
            ospray: "2.5.0"

    env:
      build_dir: "build"
      config: "Release"
      GDT_CUDA_ARCHITECTURES: ${{ matrix.arch }}
    
    steps:
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install cmake gcc g++ libtbb-dev libglfw3-dev xorg-dev
      
      - name: Add gitlab.com into known_hosts
        run: mkdir -p ~/.ssh && ssh-keyscan -H gitlab.com > ~/.ssh/known_hosts
        shell: bash

      - uses: actions/checkout@v2
        with:
          ssh-key: ${{ secrets.SUBMODULE_CONTENT_PULL_KEY }}
          submodules: 'recursive'
          ssh-known-hosts: ''

      - name: Install CUDA
        env:
          cuda: ${{ matrix.cuda }}
        run: cd github-actions && bash ./cuda-cmake-github-actions/scripts/actions/install_cuda_ubuntu.sh && cd -
        shell: bash

      - name: Install OptiX
        env:
          optix: ${{ matrix.optix }}
        run: cd github-actions && bash ./optix-cmake-github-actions/install_optix.sh && cd -
        shell: bash

      - name: Install OSPRay
        env:
          ospray: ${{ matrix.ospray }}
        run: cd github-actions && bash ./ospray-cmake-github-actions/install_ospray_ubuntu.sh && cd -
        shell: bash

      - name: CMake
        env: 
          OptiX_INSTALL_DIR: ${{ env.OptiX_INSTALL_DIR }}
        run: cmake . -B ${{ env.build_dir }} 
          -DCMAKE_BUILD_TYPE=${{ env.config }} 
          -DOVR_BUILD_DEVICE_OPTIX7=ON 
          -DOVR_BUILD_DEVICE_OSPRAY=ON 
          -Dospray_DIR=${{ env.OSPRAY_CMAKE_DIR }}
          -DGDT_CUDA_ARCHITECTURES=${{ matrix.arch }}
      
      - name: Build
        working-directory: ${{ env.build_dir }}
        run: cmake --build . --target all --verbose -j `nproc`
